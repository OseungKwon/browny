{"ast":null,"code":"import axios from 'axios';\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS } from '../types';\n\nconst loginUerAPI = loginData => {\n  console.log(loginData, \"loginData\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios.post('api/auth', loginData, config);\n};\n\nfunction* loginUser(action) {\n  try {\n    const result = yield call(loginUerAPI, action.payload);\n    console.log(result);\n    yield pug({\n      type: LOGIN_SUCCESS,\n      payload: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOGIN_FAILURE,\n      payload: e.response\n    });\n  }\n}\n\nfunction* watchLoginUser() {\n  yield takeEvery(LOGIN_REQUEST, loginUser);\n}\n\nexport default function* authSaga() {\n  yield all([fork(watchLoginUser)]);\n}","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/front/browny/client/src/redux/sagas/authSaga.js"],"names":["axios","all","call","fork","put","takeEvery","LOGIN_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","loginUerAPI","loginData","console","log","config","headers","post","loginUser","action","result","payload","pug","type","data","e","response","watchLoginUser","authSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,SAA/B,QAAgD,oBAAhD;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,aAAvC,QAA4D,UAA5D;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAe;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAAuB,WAAvB;AACA,QAAMG,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAKA,SAAOd,KAAK,CAACe,IAAN,CAAW,UAAX,EAAuBL,SAAvB,EAAkCG,MAAlC,CAAP;AACH,CARD;;AAUA,UAAUG,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMhB,IAAI,CAACO,WAAD,EAAcQ,MAAM,CAACE,OAArB,CAAzB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACA,UAAME,GAAG,CAAC;AACNC,MAAAA,IAAI,EAAEb,aADA;AAENW,MAAAA,OAAO,EAAED,MAAM,CAACI;AAFV,KAAD,CAAT;AAIH,GAPD,CAOE,OAAMC,CAAN,EAAS;AACP,UAAMnB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEf,aADA;AAENa,MAAAA,OAAO,EAAEI,CAAC,CAACC;AAFL,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,cAAV,GAA2B;AACvB,QAAMpB,SAAS,CAACE,aAAD,EAAgBS,SAAhB,CAAf;AACH;;AAED,eAAe,UAAUU,QAAV,GAAqB;AAChC,QAAMzB,GAAG,CAAC,CACNE,IAAI,CAACsB,cAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import axios from 'axios';\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS } from '../types';\n\nconst loginUerAPI = (loginData) => {\n    console.log(loginData, \"loginData\");\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n    return axios.post('api/auth', loginData, config);\n}\n\nfunction* loginUser(action) {\n    try {\n        const result = yield call(loginUerAPI, action.payload);\n        console.log(result);\n        yield pug({\n            type: LOGIN_SUCCESS,\n            payload: result.data\n        })\n    } catch(e) {\n        yield put({\n            type: LOGIN_FAILURE,\n            payload: e.response\n        })\n    }\n}\n\nfunction* watchLoginUser() {\n    yield takeEvery(LOGIN_REQUEST, loginUser)\n}\n\nexport default function* authSaga() {\n    yield all([\n        fork(watchLoginUser)\n    ])\n}"]},"metadata":{},"sourceType":"module"}