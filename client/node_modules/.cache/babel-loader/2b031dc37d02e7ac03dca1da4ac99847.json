{"ast":null,"code":"var _jsxFileName = \"/Users/inhan/vscode-workspace/front/browny/client/src/components/auth/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, NavLink } from 'reactstrap';\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from '../../redux/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginModal = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [localMsg, setLocalMsg] = useState('');\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const dispatch = useDispatch();\n  const {\n    errorMsg\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    try {\n      setLocalMsg(errorMsg);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [errorMsg]);\n\n  const handleToggle = () => {\n    dispatch({\n      type: CLEAR_ERROR_REQUEST\n    });\n    setModal(!modal);\n  };\n\n  const onChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = form;\n    const user = {\n      email,\n      password\n    };\n    console.log(user);\n    dispatch({\n      type: LOGIN_REQUEST,\n      data: user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      onClick: handleToggle,\n      href: \"#\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: handleToggle,\n      children: /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [localMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: localMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"abc@abc.com\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              for: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"dark\",\n              style: {\n                marginTop: \"2rem\"\n              },\n              block: true,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginModal, \"aSRzfeZE4VSj3reReZikqB+dQYc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/front/browny/client/src/components/auth/LoginModal.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Alert","Button","Form","FormGroup","Input","Label","Modal","ModalBody","ModalHeader","NavLink","CLEAR_ERROR_REQUEST","LOGIN_REQUEST","LoginModal","modal","setModal","localMsg","setLocalMsg","form","setForm","email","password","dispatch","errorMsg","state","auth","e","console","log","handleToggle","type","onChange","target","name","value","onSubmit","preventDefault","user","data","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalHeader, NavLink } from 'reactstrap';\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from '../../redux/types';\n\nconst LoginModal = () => {\n    const [modal, setModal] = useState(false);\n    const [localMsg, setLocalMsg] = useState('');\n    const [form, setForm] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const dispatch = useDispatch();\n    const { errorMsg } = useSelector(state => state.auth);\n    useEffect(() => {\n        try {\n            setLocalMsg(errorMsg);\n        } catch (e) {\n            console.log(e);\n        }\n        \n    }, [errorMsg]);\n\n    const handleToggle = () => {\n        dispatch({\n            type: CLEAR_ERROR_REQUEST\n        });\n        setModal(!modal);\n    };\n\n    const onChange = (e) => {\n        setForm({\n        ...form,\n        [e.target.name]: e.target.value,\n        });\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const { email, password } = form;\n        const user = { email, password };\n        console.log(user);\n        dispatch({\n            type: LOGIN_REQUEST,\n            data: user\n        })\n    }\n\n    return (\n        <div>\n            <NavLink onClick={handleToggle} href=\"#\">\n                로그인\n            </NavLink>\n            <Modal isOpen={modal} toggle={handleToggle}>\n                <ModalBody>\n                    {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder=\"abc@abc.com\"\n                                onChange={onChange}\n                            />\n                            <Label for=\"password\">Password</Label>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                onChange={onChange}\n                            />\n                            <Button color=\"dark\" style={{marginTop: \"2rem\"}} block>\n                                Login\n                            </Button>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nexport default LoginModal;\n"]},"metadata":{},"sourceType":"module"}