{"ast":null,"code":"var _jsxFileName = \"/Users/inhan/vscode-workspace/front/browny/client/src/components/AppNavbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Collapse, Container, Input, Nav, Navbar, NavbarToggler, NavItem } from 'reactstrap';\nimport { LOGOUT_REQUEST } from '../redux/types';\nimport LoginModal from './auth/LoginModal';\nimport SearchInput from './search/searchInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppNavbar = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    isAuthenticated,\n    user,\n    userRole\n  } = useSelector(state => state.auth);\n  console.log(userRole, \"userRole\");\n  const dispatch = useDispatch();\n  /**\n   * useCallback: useEffect와 유사,\n   * 메모이제이션 콜백을 반환\n   */\n\n  const onLogout = useCallback(() => {\n    dispatch({\n      type: LOGOUT_REQUEST\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    setIsOpen(false);\n  }, [user]);\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const guestLink = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavItem, {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n      children: /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      color: \"dark\",\n      dark: true,\n      expand: \"lg\",\n      className: \"sticky-top\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"text-white text-decoration-none\",\n          children: \"Brownie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          isOpen: isOpen,\n          navbar: true,\n          children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n            isOpen: isOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ml-auto d-flex justify-content-around\",\n            navbar: true,\n            children: false ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-white\",\n              children: \"authLink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AppNavbar, \"oYyxPdkQd4KBCGwb7zfApw6Z6aQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AppNavbar;\nexport default AppNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppNavbar\");","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/front/browny/client/src/components/AppNavbar.js"],"names":["React","Fragment","useCallback","useEffect","useState","useDispatch","useSelector","Link","Collapse","Container","Input","Nav","Navbar","NavbarToggler","NavItem","LOGOUT_REQUEST","LoginModal","SearchInput","AppNavbar","isOpen","setIsOpen","isAuthenticated","user","userRole","state","auth","console","log","dispatch","onLogout","type","handleToggle","guestLink"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0CC,MAA1C,EAAkDC,aAAlD,EAAiEC,OAAjE,QAAgF,YAAhF;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAEiB,IAAAA,eAAF;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAsCjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAvD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsB,UAAtB;AAEA,QAAMK,QAAQ,GAAGvB,WAAW,EAA5B;AACA;AACJ;AACA;AACA;;AACI,QAAMwB,QAAQ,GAAG3B,WAAW,CAAC,MAAM;AAC/B0B,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH,GAJ2B,EAIzB,CAACa,QAAD,CAJyB,CAA5B;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFQ,EAEN,CAACE,IAAD,CAFM,CAAT;;AAIA,QAAMS,YAAY,GAAG,MAAM;AACvBX,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD;;AAGA,QAAMa,SAAS,gBACX,QAAC,QAAD;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAWA,sBACK;AAAA,2BACD,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,MAAM,EAAC,IAAjC;AAAsC,MAAA,SAAS,EAAC,YAAhD;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,iCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,QAAD;AAAU,UAAA,MAAM,EAAEb,MAAlB;AAA0B,UAAA,MAAM,MAAhC;AAAA,kCACA,QAAC,WAAD;AAAa,YAAA,MAAM,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,uCAAf;AAAuD,YAAA,MAAM,MAA7D;AAAA,sBACK,qBAEO;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFP,gBAIO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADC,mBADL;AAyBH,CA3DD;;GAAMD,S;UAE0CZ,W,EAG3BD,W;;;KALfa,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { Collapse, Container, Input, Nav, Navbar, NavbarToggler, NavItem } from 'reactstrap'\nimport { LOGOUT_REQUEST } from '../redux/types';\nimport LoginModal from './auth/LoginModal';\nimport SearchInput from './search/searchInput';\n\n\nconst AppNavbar = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const { isAuthenticated, user, userRole } = useSelector(state => state.auth);\n    console.log(userRole, \"userRole\");\n\n    const dispatch = useDispatch();\n    /**\n     * useCallback: useEffect와 유사,\n     * 메모이제이션 콜백을 반환\n     */\n    const onLogout = useCallback(() => {\n        dispatch({\n            type: LOGOUT_REQUEST\n        })\n    }, [dispatch]);\n\n    useEffect(() => {\n        setIsOpen(false);\n    }, [user]);\n\n    const handleToggle = () => {\n        setIsOpen(!isOpen);\n    }\n    const guestLink = (\n        <Fragment>\n            <NavItem>\n                회원가입\n            </NavItem>\n            <NavItem>\n                <LoginModal />\n            </NavItem>\n        </Fragment>\n    );\n\n    return (\n         <>\n        <Navbar color=\"dark\" dark expand=\"lg\" className=\"sticky-top\">\n            <Container>\n                <Link to=\"/\" className=\"text-white text-decoration-none\">\n                        Brownie\n                </Link>\n                \n                <NavbarToggler />\n                <Collapse isOpen={isOpen} navbar>\n                <SearchInput isOpen={isOpen} />\n                <Nav className=\"ml-auto d-flex justify-content-around\" navbar>\n                    {false ?\n                        (\n                            <h1 className=\"text-white\">authLink</h1> \n                        ) : (\n                            <LoginModal/>\n                        )\n                    }\n                </Nav>\n                </Collapse>\n            </Container>\n        </Navbar>\n        </>\n    )\n}\n\nexport default AppNavbar;\n"]},"metadata":{},"sourceType":"module"}