{"ast":null,"code":"var _jsxFileName = \"/Users/inhan/vscode-workspace/front/browny/client/src/components/auth/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, Form, FormGroup, Modal, ModalBody, ModalHeader, NavLink } from 'reactstrap';\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from '../../redux/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginModal = () => {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [localMsg, setLocalMsg] = useState('');\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const dispatch = useDispatch();\n  const {\n    errorMsg\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    try {\n      setLocalMsg(errorMsg);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [errorMsg]);\n\n  const handleToggle = () => {\n    dispatch({\n      type: CLEAR_ERROR_REQUEST\n    });\n    setModal(!modal);\n  };\n\n  const onChange = e => {\n    setValues({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const conSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = form;\n    const user = {\n      email,\n      password\n    };\n    console.log(user);\n    dispatch({\n      type: LOGIN_REQUEST,\n      data: user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      onClick: handleToggle,\n      href: \"#\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modal,\n      toggle: handleToggle,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: handleToggle,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [localMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: localMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginModal, \"aSRzfeZE4VSj3reReZikqB+dQYc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/front/browny/client/src/components/auth/LoginModal.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Alert","Form","FormGroup","Modal","ModalBody","ModalHeader","NavLink","CLEAR_ERROR_REQUEST","LOGIN_REQUEST","LoginModal","modal","setModal","localMsg","setLocalMsg","form","setForm","email","password","dispatch","errorMsg","state","auth","e","console","log","handleToggle","type","onChange","setValues","target","name","value","conSubmit","preventDefault","user","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, Form, FormGroup, Modal, ModalBody, ModalHeader, NavLink } from 'reactstrap';\nimport { CLEAR_ERROR_REQUEST, LOGIN_REQUEST } from '../../redux/types';\n\nconst LoginModal = () => {\n    const [modal, setModal] = useState(false);\n    const [localMsg, setLocalMsg] = useState('');\n    const [form, setForm] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const dispatch = useDispatch();\n    const { errorMsg } = useSelector(state => state.auth);\n    useEffect(() => {\n        try {\n            setLocalMsg(errorMsg);\n        } catch (e) {\n            console.log(e);\n        }\n        \n    }, [errorMsg]);\n\n    const handleToggle = () => {\n        dispatch({\n            type: CLEAR_ERROR_REQUEST\n        });\n        setModal(!modal);\n    };\n\n    const onChange = e => {\n        setValues({\n            ...form,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const conSubmit = e => {\n        e.preventDefault();\n        const { email, password } = form;\n        const user = { email, password };\n        console.log(user);\n        dispatch({\n            type: LOGIN_REQUEST,\n            data: user\n        })\n    }\n\n    return (\n        <div>\n            <NavLink onClick={handleToggle} href=\"#\">\n                로그인\n            </NavLink>\n            <Modal isOpen={modal} toggle={handleToggle}>\n                <ModalHeader toggle={handleToggle}>로그인</ModalHeader>\n                <ModalBody>\n                    {localMsg ? <Alert color=\"danger\">{localMsg}</Alert> : null}\n                    <Form>\n                        <FormGroup></FormGroup>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    )\n}\n\nexport default LoginModal;\n"]},"metadata":{},"sourceType":"module"}