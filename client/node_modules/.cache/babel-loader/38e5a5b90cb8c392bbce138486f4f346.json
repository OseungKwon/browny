{"ast":null,"code":"import { POSTS_LOADING_FAILURE, POSTS_LOADING_REQUEST, POSTS_LOADING_SUCCESS } from '../types';\nimport axios from 'axios';\nimport { call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { all } from 'async';\n\nconst loadPostAPI = () => {\n  return axios.get(\"api/post\");\n};\n\nfunction* loadPosts() {\n  try {\n    const result = yield call(loadPostAPI);\n    console.log(result, \"loadPosts\");\n    yield put({\n      type: POSTS_LOADING_SUCCESS,\n      payload: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: POSTS_LOADING_FAILURE,\n      payload: e\n    });\n    yield push(\"/\");\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeEvery(POSTS_LOADING_REQUEST, loadPosts);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadPosts)]);\n}","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/brownie/src/redux/sagas/postSaga.js"],"names":["POSTS_LOADING_FAILURE","POSTS_LOADING_REQUEST","POSTS_LOADING_SUCCESS","axios","call","fork","put","takeEvery","push","all","loadPostAPI","get","loadPosts","result","console","log","type","payload","data","e","watchLoadPosts","postSaga"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,EAAuDC,qBAAvD,QAAoF,UAApF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,SAA1B,QAA2C,oBAA3C;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,GAAT,QAAoB,OAApB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,SAAOP,KAAK,CAACQ,GAAN,CAAU,UAAV,CAAP;AACH,CAFD;;AAIA,UAAUC,SAAV,GAAsB;AAClB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACM,WAAD,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,WAApB;AACA,UAAMP,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEd,qBADA;AAENe,MAAAA,OAAO,EAAEJ,MAAM,CAACK;AAFV,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,CAAP,EAAU;AACR,UAAMb,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEhB,qBADA;AAENiB,MAAAA,OAAO,EAAEE;AAFH,KAAD,CAAT;AAIA,UAAMX,IAAI,CAAC,GAAD,CAAV;AACH;AACJ;;AACD,UAAUY,cAAV,GAA2B;AACnB,QAAMb,SAAS,CAACN,qBAAD,EAAwBW,SAAxB,CAAf;AACP;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMZ,GAAG,CAAC,CAACJ,IAAI,CAACe,cAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { POSTS_LOADING_FAILURE, POSTS_LOADING_REQUEST, POSTS_LOADING_SUCCESS } from '../types';\nimport axios from 'axios';\nimport { call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport { all } from 'async';\n\nconst loadPostAPI = () => {\n    return axios.get(\"api/post\");\n}\n\nfunction* loadPosts() {\n    try {\n        const result = yield call(loadPostAPI);\n        console.log(result, \"loadPosts\");\n        yield put({\n            type: POSTS_LOADING_SUCCESS,\n            payload: result.data\n        })\n    } catch (e) {\n        yield put({\n            type: POSTS_LOADING_FAILURE,\n            payload: e\n        })\n        yield push(\"/\") \n    }\n}\nfunction* watchLoadPosts() {\n        yield takeEvery(POSTS_LOADING_REQUEST, loadPosts);\n}\n\nexport default function* postSaga() {\n    yield all([fork(watchLoadPosts)]);\n}"]},"metadata":{},"sourceType":"module"}