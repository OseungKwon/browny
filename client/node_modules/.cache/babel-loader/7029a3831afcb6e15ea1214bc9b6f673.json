{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './redux/reducers/index';\nimport rootSaga from './redux/sagas';\nexport const history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst initialState = {}; //초기값\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__; //개발환경에서만 설정\n\nconst composeEnhancer = process.env.NODE_ENV === \"production\" ? compose : devTools || compose;\nconst store = createStore(createRootReducer(history), initialState, composeEnhancer(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/brownie/src/store.js"],"names":["createStore","compose","applyMiddleware","createSagaMiddleware","createBrowserHistory","routerMiddleware","createRootReducer","rootSaga","history","sagaMiddleware","initialState","middlewares","devTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","composeEnhancer","process","env","NODE_ENV","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAGA,OAAO,MAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AAEP,MAAMK,cAAc,GAAGN,oBAAoB,EAA3C;AAEA,MAAMO,YAAY,GAAG,EAArB,C,CAAwB;;AAExB,MAAMC,WAAW,GAAG,CAACF,cAAD,EAAiBJ,gBAAgB,CAACG,OAAD,CAAjC,CAApB;AACA,MAAMI,QAAQ,GAAGC,MAAM,CAACC,oCAAxB,C,CAEA;;AACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCjB,OAAxC,GAAkDW,QAAQ,IAAIX,OAAtF;AAEA,MAAMkB,KAAK,GAAGnB,WAAW,CACrBM,iBAAiB,CAACE,OAAD,CADI,EAErBE,YAFqB,EAGrBK,eAAe,CAACb,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAHM,CAAzB;AAMAF,cAAc,CAACW,GAAf,CAAmBb,QAAnB;AAEA,eAAeY,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport createRootReducer from './redux/reducers/index'\nimport rootSaga from './redux/sagas'\n\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};//초기값\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n//개발환경에서만 설정\nconst composeEnhancer = process.env.NODE_ENV === \"production\" ? compose : devTools || compose;\n\nconst store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancer(applyMiddleware(...middlewares))\n)\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}