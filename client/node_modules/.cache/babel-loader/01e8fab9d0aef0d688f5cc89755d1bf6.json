{"ast":null,"code":"import { POST_LOADING_REQUEST, POST_LOADING_SUCCESS, POST_LOADING_FAILURE } from \"../types\";\nconst initialState = {\n  isAuthenticated: null,\n  posts: [],\n  postDetail: \"\",\n  postCount: \"\",\n  loading: false,\n  error: \"\",\n  creatorId: \"\",\n  categoryFindResult: \"\",\n  title: \"\",\n  searchBy: \"\",\n  searchResult: \"\"\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_LOADING_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case POST_LOADING_SUCCESS:\n      return { ...state,\n        posts: [...state.posts, ...action.payload],\n        loading: false\n      };\n\n    case POST_LOADING_FAILURE:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/inhan/vscode-workspace/brownie/src/redux/reducers/PostReducer.js"],"names":["POST_LOADING_REQUEST","POST_LOADING_SUCCESS","POST_LOADING_FAILURE","initialState","isAuthenticated","posts","postDetail","postCount","loading","error","creatorId","categoryFindResult","title","searchBy","searchResult","state","action","type","payload"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,oBAArD,QAAiF,UAAjF;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,IADA;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,SAAS,EAAE,EAJM;AAKjBC,EAAAA,OAAO,EAAE,KALQ;AAMjBC,EAAAA,KAAK,EAAE,EANU;AAOjBC,EAAAA,SAAS,EAAE,EAPM;AAQjBC,EAAAA,kBAAkB,EAAE,EARH;AASjBC,EAAAA,KAAK,EAAE,EATU;AAUjBC,EAAAA,QAAQ,EAAE,EAVO;AAWjBC,EAAAA,YAAY,EAAE;AAXG,CAArB;AAcA,eAAe,UAAUC,KAAK,GAAGZ,YAAlB,EAAgCa,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,oBAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHP,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKP,oBAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHV,QAAAA,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAV,EAAiB,GAAGW,MAAM,CAACE,OAA3B,CAFJ;AAGHV,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,oBAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHP,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ;AACI,aAAOO,KAAP;AAnBR;AAqBH","sourcesContent":["import { POST_LOADING_REQUEST, POST_LOADING_SUCCESS, POST_LOADING_FAILURE } from \"../types\";\n\nconst initialState = {\n    isAuthenticated: null,\n    posts: [],\n    postDetail: \"\",\n    postCount: \"\",\n    loading: false,\n    error: \"\",\n    creatorId: \"\",\n    categoryFindResult: \"\",\n    title: \"\",\n    searchBy: \"\",\n    searchResult: \"\"\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case POST_LOADING_REQUEST :\n            return {\n                ...state,\n                loading: true,\n            }\n        case POST_LOADING_SUCCESS :\n            return {\n                ...state,\n                posts: [...state.posts, ...action.payload],\n                loading: false,\n            }\n        case POST_LOADING_FAILURE :\n            return {\n                ...state,\n                loading: false,\n            }\n        \n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}